
# Name of model to be built and evaluated
ModelName                               = RepeatedLink

# Query string to choose what to evaluate (use '\' to enable multiline config)
QueryString                             = \
    Energy>>RepeatedLink:Send@0 \
    NddPower>>RepeatedLink:Leakage@0 \
    Area>>RepeatedLink:Active@0 \

# Variables marked (*) will be overwritten by on-chip-network-power-area-2.0.py
# Injection rate (*)
InjectionRate                           = 1
# Evaluation string
EvaluateString                          = \
    link_dynamic    = $(Energy>>RepeatedLink:Send) * $(Frequency); \
    link_static     = $(NddPower>>RepeatedLink:Leakage); \
    print "    Dynamic power: " link_dynamic * $(InjectionRate); \
    print "    Leakage power: " link_static; \

# Technology file
# Available models: Bulk45LVT.model, Bulk32LVT.model, Bulk22LVT.model, TG11LVT.model
ElectricalTechModelFilename             = ext/dsent/tech/tech_models/TG11LVT.model

###############################################################################
# Timing optimization
###############################################################################

# True if want to perform timing optimization; otherwise, false.
# NOTE: for links it should never be turned on for timing optimization, the 
# link model is already doing timing optimization to insert buffers based on 
# the 'Delay' specified
IsPerformTimingOptimization             = false
# Nets that the timing optimizer starts from
TimingOptimization->StartNetNames       = []
# Operating frequency (Hz)
# 'Frequency' has no effect to the RepeatedLink model. Use 'Delay' to 
# constraint the links timing. 
Frequency                               = 1e9

###############################################################################
# Model specifications
###############################################################################

# Data width of the repeated link/bus
NumberBits                              = 128
# Wire layer
WireLayer                               = Global
# Wire width multiplier
WireWidthMultiplier                     = 1.0
# Wire spacing multiplier
WireSpacingMultiplier                   = 1.0

# Wire length (m) (*)
WireLength                              = 1e-3
# Delay of the wire (may not be 1.0 / Frequency) (*)
Delay                                   = 1e-9
